name: 'Java Test, Package & JRE Action'
description: 'Downloads a workspace, runs tests, packages the app, and creates a custom JRE.'

inputs:
  java-version:
    description: 'JDK version.'
    required: false
    default: '25'
  distribution:
    description: 'JDK distribution (e.g., temurin, corretto).'
    required: false
    default: 'corretto'
  working-directory:
    description: 'Directory of the pom.xml, for monorepos.'
    required: false
    default: 'backend'
  workspace-artifact-name:
    description: 'Name of the workspace artifact to download.'
    required: false
    default: 'workspace'
  jar-artifact-name:
    description: 'Name for the final uploaded JAR artifact.'
    required: false
    default: 'java-app-jar'
  jre-artifact-name:
    description: 'Name for the custom JRE artifact.'
    required: false
    default: 'custom-jre'
  artifact-retention-days:
    description: 'How long to retain the JAR and JRE artifacts.'
    required: false
    default: 5

outputs:
  jar-path:
    description: "Path to the packaged JAR file."
    value: ${{ inputs.working-directory }}/target/app.jar

runs:
  using: "composite"
  steps:
    - name: Set up JDK with Maven caching
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.distribution }}
        cache: 'maven'
        cache-dependency-path: ${{ inputs.working-directory }}/pom.xml

    - name: Download Workspace
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.workspace-artifact-name }}
        path: .

    - name: Run Tests with Maven
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: mvn -B test

    - name: Package Application
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: mvn -B package -DskipTests

    - name: Determine JAR path and rename
      id: determine-jar-path
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        FINAL_NAME=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout)
        # Rename the JAR to a consistent name for the Docker build
        mv "target/${FINAL_NAME}.jar" "target/app.jar"

    - name: Analyze Application Dependencies with jdeps
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      # The analysis now runs on the consistently named app.jar
      run: jdeps --ignore-missing-deps --print-module-deps target/app.jar > jre-deps.info

    - name: Build Custom JRE with jlink
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: jlink --add-modules $(cat jre-deps.info) --strip-debug --no-man-pages --no-header-files --compress=2 --output custom-jre

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.jar-artifact-name }}
        path: ${{ inputs.working-directory }}/target/app.jar
        retention-days: ${{ inputs.artifact-retention-days }}

    - name: Upload Custom JRE Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.jre-artifact-name }}
        path: ${{ inputs.working-directory }}/custom-jre/
        retention-days: ${{ inputs.artifact-retention-days }}

