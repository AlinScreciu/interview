name: "Java Test & Package Action"
description: "Downloads a workspace, runs tests, and packages the application."

inputs:
  java-version:
    description: "JDK version."
    required: false
    default: "25"
  distribution:
    description: "JDK distribution (e.g., temurin, corretto)."
    required: false
    default: "corretto"
  working-directory:
    description: "Directory of the pom.xml, for monorepos."
    required: false
    default: "backend"
  workspace-artifact-name:
    description: "Name of the workspace artifact to download."
    required: false
    default: "workspace"
  jar-artifact-name:
    description: "Name for the final uploaded JAR artifact."
    required: false
    default: "java-app-jar"

outputs:
  app-version:
    description: "The generated semantic version of the application."
    value: ${{ steps.generate-version.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Set up JDK with Maven caching
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.distribution }}
        cache: "maven"
        cache-dependency-path: ${{ inputs.working-directory }}/pom.xml

    - name: Download Workspace
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.workspace-artifact-name }}
        path: .

    - name: Get base version from pom.xml
      id: get-version
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        BASE_VERSION=$(mvn help:evaluate -Dexpression=project.base.version -q -DforceStdout)
        echo "base_version=${BASE_VERSION}" >> $GITHUB_OUTPUT
        echo "Base version from pom: ${BASE_VERSION}"

    - name: Generate Semantic Version
      id: generate-version
      shell: bash
      run: |
        # Assumes BASE_VERSION from pom.xml is like "1.0"
        # We will use the GitHub run number as the PATCH version.
        BASE_VERSION="${{ steps.get-version.outputs.base_version }}"
        PATCH_VERSION="${{ github.run_number }}"

        # Build metadata should contain the date and commit SHA
        BUILD_METADATA="$(date +'%Y%m%d').${GITHUB_SHA::7}"

        # For non-master branches, create a pre-release version
        if [[ "${{ github.ref_name }}" != "master" ]]; then
          # ✅ Example: 1.0.32-SNAPSHOT+20250923.1dd30d4
          VERSION="${BASE_VERSION}.${PATCH_VERSION}-SNAPSHOT+${BUILD_METADATA}"
        else
          # ✅ Example for master: 1.0.32+20250923.1dd30d4
          VERSION="${BASE_VERSION}.${PATCH_VERSION}+${BUILD_METADATA}"
        fi

        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "Generated version: ${VERSION}"
        
    - name: Run Tests with Maven
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: mvn -B -Drevision=${{ steps.generate-version.outputs.version }} test

    - name: Package Application
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: mvn -B -Drevision=${{ steps.generate-version.outputs.version }} package -DskipTests

    - name: Rename JAR for consistency
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: mv target/interview-${{ steps.generate-version.outputs.version }}.jar target/app.jar

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.jar-artifact-name }}
        path: ${{ inputs.working-directory }}/target/app.jar
