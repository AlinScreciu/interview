name: "Docker Build & Push Action"
description: "Downloads artifacts, then builds and pushes a multi-platform Docker image."

inputs:
  working-directory:
    description: "Directory for the build context and artifact download."
    required: false
    default: "backend"
  jar-artifact-name:
    description: "Name of the application JAR artifact to download."
    required: false
    default: "java-app-jar"
  registry:
    description: "Server address of the container registry."
    required: true
  registry-username:
    description: "Username for the container registry."
    required: true
  registry-password:
    description: "Password or token for the container registry."
    required: true
  image-name:
    description: "Name of the Docker image."
    required: true
  app-version:
    description: "The semantic version of the application to use for tagging."
    required: true
  platforms:
    description: "Comma-separated list of platforms to build for."
    required: false
    default: "linux/amd64"
  push-image:
    description: 'Set to "true" to push the image to the registry.'
    required: false
    default: "false"

outputs:
  tags:
    description: "The generated Docker image tags."
    value: ${{ steps.meta.outputs.tags }}
  labels:
    description: "The generated Docker image labels."
    value: ${{ steps.meta.outputs.labels }}

runs:
  using: "composite"
  steps:
    - name: Download Application JAR
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.jar-artifact-name }}
        path: ${{ inputs.working-directory }}/target

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3.11.1

    - name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}
        tags: |
          type=raw,value=${{ inputs.app-version }}
          type=raw,value=latest,enable=${{ github.ref_name == 'master' }}
          type=sha,prefix=sha-

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.working-directory }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push-image }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=min
