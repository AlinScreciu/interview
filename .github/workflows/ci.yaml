# Name of the workflow, displayed in the GitHub Actions tab.
name: Tekmetric Backend CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

# Ensures that only one workflow run is in progress for a specific PR or branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build with reusable action
        uses: ./.github/actions/java-build
        with:
          working-directory: "backend"

  test:
    name: Test & Package Application
    runs-on: ubuntu-latest
    needs: build
    outputs:
      version: ${{ steps.test_package.outputs.version }}
      docker_tag: ${{ steps.test_package.outputs.docker_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test & Package
        id: test_package
        uses: ./.github/actions/java-test
        with:
          working-directory: "backend"
          jar-artifact-name: "java-app-jar"

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get lowercase repository owner
        id: repo-owner
        run: echo "name=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        id: build_and_push
        uses: ./.github/actions/docker-build
        with:
          registry: ghcr.io
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ steps.repo-owner.outputs.name }}/tekmetric-backend
          app-version: ${{ needs.test.outputs.docker_tag }} # Use the sanitized Docker tag
          platforms: linux/amd64,linux/arm64
          push-image: true
          working-directory: "backend"
          jar-artifact-name: "java-app-jar"

      - name: Add Image URL to Job Summary
        if: github.ref_name == 'master'
        run: |
          echo "### Docker Image Published" >> $GITHUB_STEP_SUMMARY
          echo "The following image tags were pushed to the registry:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.build_and_push.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  scan-image:
    name: Scan Docker Image for Vulnerabilities
    runs-on: ubuntu-latest
    needs: [docker-build, test]
    permissions:
      contents: read # for checkout
      packages: read # to pull the image from GHCR
      security-events: write # to upload SARIF results to GitHub Security tab
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Scan Docker Image
        uses: ./.github/actions/scan-image
        with:
          image-ref: "ghcr.io/${{ github.repository_owner }}/${{ needs.docker-build.outputs.image-name }}:${{ needs.test.outputs.docker_tag }}"

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "TODO: Download artifacts and run SonarCloud/etc."
        working-directory: ./backend
        run: echo "This job will perform code quality checks on the source code."

  publish-chart:
    name: Publish Helm Chart
    runs-on: self-hosted # As requested for local ChartMuseum
    needs: [scan-image, test]
    if: github.ref_name == 'master' # Only publish on master branch
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Publish Helm Chart
        uses: ./.github/actions/publish-chart
        with:
          chart-path: "./backend/src/main/helm/backend-service-chart"
          chartmuseum-url: "http://localhost:9090"
          app-version: ${{ needs.test.outputs.version }} # Use the full SemVer string
          force: "false"

